<?php
/**
 * RepricingBusinessPriceSettingsDTO
 *
 * PHP version 5
 *
 * @category Class
 * @package  eSagu\Amzn\RePricing\V1
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * eSagu amzn RePricing API
 *
 * eSagu API to reprice items on amazon.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace eSagu\Amzn\RePricing\V1\Model;

use \ArrayAccess;

/**
 * RepricingBusinessPriceSettingsDTO Class Doc Comment
 *
 * @category    Class
 * @description The business price settings. In the business price settings you can configure the amazon business prices including quantity discounts. The name must be unique.
 * @package     eSagu\Amzn\RePricing\V1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RepricingBusinessPriceSettingsDTO implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'RepricingBusinessPriceSettingsDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'business_price_percent' => 'int',
        'id' => 'int',
        'inserted' => '\DateTime',
        'name' => 'string',
        'quantity_lower_bound1' => 'int',
        'quantity_lower_bound2' => 'int',
        'quantity_lower_bound3' => 'int',
        'quantity_lower_bound4' => 'int',
        'quantity_lower_bound5' => 'int',
        'quantity_price_percent1' => 'int',
        'quantity_price_percent2' => 'int',
        'quantity_price_percent3' => 'int',
        'quantity_price_percent4' => 'int',
        'quantity_price_percent5' => 'int',
        'updated' => '\DateTime'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'business_price_percent' => 'businessPricePercent',
        'id' => 'id',
        'inserted' => 'inserted',
        'name' => 'name',
        'quantity_lower_bound1' => 'quantityLowerBound1',
        'quantity_lower_bound2' => 'quantityLowerBound2',
        'quantity_lower_bound3' => 'quantityLowerBound3',
        'quantity_lower_bound4' => 'quantityLowerBound4',
        'quantity_lower_bound5' => 'quantityLowerBound5',
        'quantity_price_percent1' => 'quantityPricePercent1',
        'quantity_price_percent2' => 'quantityPricePercent2',
        'quantity_price_percent3' => 'quantityPricePercent3',
        'quantity_price_percent4' => 'quantityPricePercent4',
        'quantity_price_percent5' => 'quantityPricePercent5',
        'updated' => 'updated'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'business_price_percent' => 'setBusinessPricePercent',
        'id' => 'setId',
        'inserted' => 'setInserted',
        'name' => 'setName',
        'quantity_lower_bound1' => 'setQuantityLowerBound1',
        'quantity_lower_bound2' => 'setQuantityLowerBound2',
        'quantity_lower_bound3' => 'setQuantityLowerBound3',
        'quantity_lower_bound4' => 'setQuantityLowerBound4',
        'quantity_lower_bound5' => 'setQuantityLowerBound5',
        'quantity_price_percent1' => 'setQuantityPricePercent1',
        'quantity_price_percent2' => 'setQuantityPricePercent2',
        'quantity_price_percent3' => 'setQuantityPricePercent3',
        'quantity_price_percent4' => 'setQuantityPricePercent4',
        'quantity_price_percent5' => 'setQuantityPricePercent5',
        'updated' => 'setUpdated'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'business_price_percent' => 'getBusinessPricePercent',
        'id' => 'getId',
        'inserted' => 'getInserted',
        'name' => 'getName',
        'quantity_lower_bound1' => 'getQuantityLowerBound1',
        'quantity_lower_bound2' => 'getQuantityLowerBound2',
        'quantity_lower_bound3' => 'getQuantityLowerBound3',
        'quantity_lower_bound4' => 'getQuantityLowerBound4',
        'quantity_lower_bound5' => 'getQuantityLowerBound5',
        'quantity_price_percent1' => 'getQuantityPricePercent1',
        'quantity_price_percent2' => 'getQuantityPricePercent2',
        'quantity_price_percent3' => 'getQuantityPricePercent3',
        'quantity_price_percent4' => 'getQuantityPricePercent4',
        'quantity_price_percent5' => 'getQuantityPricePercent5',
        'updated' => 'getUpdated'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['business_price_percent'] = isset($data['business_price_percent']) ? $data['business_price_percent'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['inserted'] = isset($data['inserted']) ? $data['inserted'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['quantity_lower_bound1'] = isset($data['quantity_lower_bound1']) ? $data['quantity_lower_bound1'] : null;
        $this->container['quantity_lower_bound2'] = isset($data['quantity_lower_bound2']) ? $data['quantity_lower_bound2'] : null;
        $this->container['quantity_lower_bound3'] = isset($data['quantity_lower_bound3']) ? $data['quantity_lower_bound3'] : null;
        $this->container['quantity_lower_bound4'] = isset($data['quantity_lower_bound4']) ? $data['quantity_lower_bound4'] : null;
        $this->container['quantity_lower_bound5'] = isset($data['quantity_lower_bound5']) ? $data['quantity_lower_bound5'] : null;
        $this->container['quantity_price_percent1'] = isset($data['quantity_price_percent1']) ? $data['quantity_price_percent1'] : null;
        $this->container['quantity_price_percent2'] = isset($data['quantity_price_percent2']) ? $data['quantity_price_percent2'] : null;
        $this->container['quantity_price_percent3'] = isset($data['quantity_price_percent3']) ? $data['quantity_price_percent3'] : null;
        $this->container['quantity_price_percent4'] = isset($data['quantity_price_percent4']) ? $data['quantity_price_percent4'] : null;
        $this->container['quantity_price_percent5'] = isset($data['quantity_price_percent5']) ? $data['quantity_price_percent5'] : null;
        $this->container['updated'] = isset($data['updated']) ? $data['updated'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['business_price_percent'] === null) {
            $invalid_properties[] = "'business_price_percent' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalid_properties[] = "'name' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['business_price_percent'] === null) {
            return false;
        }
        if ($this->container['name'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets business_price_percent
     * @return int
     */
    public function getBusinessPricePercent()
    {
        return $this->container['business_price_percent'];
    }

    /**
     * Sets business_price_percent
     * @param int $business_price_percent
     * @return $this
     */
    public function setBusinessPricePercent($business_price_percent)
    {
        $this->container['business_price_percent'] = $business_price_percent;

        return $this;
    }

    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets inserted
     * @return \DateTime
     */
    public function getInserted()
    {
        return $this->container['inserted'];
    }

    /**
     * Sets inserted
     * @param \DateTime $inserted
     * @return $this
     */
    public function setInserted($inserted)
    {
        $this->container['inserted'] = $inserted;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets quantity_lower_bound1
     * @return int
     */
    public function getQuantityLowerBound1()
    {
        return $this->container['quantity_lower_bound1'];
    }

    /**
     * Sets quantity_lower_bound1
     * @param int $quantity_lower_bound1
     * @return $this
     */
    public function setQuantityLowerBound1($quantity_lower_bound1)
    {
        $this->container['quantity_lower_bound1'] = $quantity_lower_bound1;

        return $this;
    }

    /**
     * Gets quantity_lower_bound2
     * @return int
     */
    public function getQuantityLowerBound2()
    {
        return $this->container['quantity_lower_bound2'];
    }

    /**
     * Sets quantity_lower_bound2
     * @param int $quantity_lower_bound2
     * @return $this
     */
    public function setQuantityLowerBound2($quantity_lower_bound2)
    {
        $this->container['quantity_lower_bound2'] = $quantity_lower_bound2;

        return $this;
    }

    /**
     * Gets quantity_lower_bound3
     * @return int
     */
    public function getQuantityLowerBound3()
    {
        return $this->container['quantity_lower_bound3'];
    }

    /**
     * Sets quantity_lower_bound3
     * @param int $quantity_lower_bound3
     * @return $this
     */
    public function setQuantityLowerBound3($quantity_lower_bound3)
    {
        $this->container['quantity_lower_bound3'] = $quantity_lower_bound3;

        return $this;
    }

    /**
     * Gets quantity_lower_bound4
     * @return int
     */
    public function getQuantityLowerBound4()
    {
        return $this->container['quantity_lower_bound4'];
    }

    /**
     * Sets quantity_lower_bound4
     * @param int $quantity_lower_bound4
     * @return $this
     */
    public function setQuantityLowerBound4($quantity_lower_bound4)
    {
        $this->container['quantity_lower_bound4'] = $quantity_lower_bound4;

        return $this;
    }

    /**
     * Gets quantity_lower_bound5
     * @return int
     */
    public function getQuantityLowerBound5()
    {
        return $this->container['quantity_lower_bound5'];
    }

    /**
     * Sets quantity_lower_bound5
     * @param int $quantity_lower_bound5
     * @return $this
     */
    public function setQuantityLowerBound5($quantity_lower_bound5)
    {
        $this->container['quantity_lower_bound5'] = $quantity_lower_bound5;

        return $this;
    }

    /**
     * Gets quantity_price_percent1
     * @return int
     */
    public function getQuantityPricePercent1()
    {
        return $this->container['quantity_price_percent1'];
    }

    /**
     * Sets quantity_price_percent1
     * @param int $quantity_price_percent1
     * @return $this
     */
    public function setQuantityPricePercent1($quantity_price_percent1)
    {
        $this->container['quantity_price_percent1'] = $quantity_price_percent1;

        return $this;
    }

    /**
     * Gets quantity_price_percent2
     * @return int
     */
    public function getQuantityPricePercent2()
    {
        return $this->container['quantity_price_percent2'];
    }

    /**
     * Sets quantity_price_percent2
     * @param int $quantity_price_percent2
     * @return $this
     */
    public function setQuantityPricePercent2($quantity_price_percent2)
    {
        $this->container['quantity_price_percent2'] = $quantity_price_percent2;

        return $this;
    }

    /**
     * Gets quantity_price_percent3
     * @return int
     */
    public function getQuantityPricePercent3()
    {
        return $this->container['quantity_price_percent3'];
    }

    /**
     * Sets quantity_price_percent3
     * @param int $quantity_price_percent3
     * @return $this
     */
    public function setQuantityPricePercent3($quantity_price_percent3)
    {
        $this->container['quantity_price_percent3'] = $quantity_price_percent3;

        return $this;
    }

    /**
     * Gets quantity_price_percent4
     * @return int
     */
    public function getQuantityPricePercent4()
    {
        return $this->container['quantity_price_percent4'];
    }

    /**
     * Sets quantity_price_percent4
     * @param int $quantity_price_percent4
     * @return $this
     */
    public function setQuantityPricePercent4($quantity_price_percent4)
    {
        $this->container['quantity_price_percent4'] = $quantity_price_percent4;

        return $this;
    }

    /**
     * Gets quantity_price_percent5
     * @return int
     */
    public function getQuantityPricePercent5()
    {
        return $this->container['quantity_price_percent5'];
    }

    /**
     * Sets quantity_price_percent5
     * @param int $quantity_price_percent5
     * @return $this
     */
    public function setQuantityPricePercent5($quantity_price_percent5)
    {
        $this->container['quantity_price_percent5'] = $quantity_price_percent5;

        return $this;
    }

    /**
     * Gets updated
     * @return \DateTime
     */
    public function getUpdated()
    {
        return $this->container['updated'];
    }

    /**
     * Sets updated
     * @param \DateTime $updated
     * @return $this
     */
    public function setUpdated($updated)
    {
        $this->container['updated'] = $updated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\eSagu\Amzn\RePricing\V1\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\eSagu\Amzn\RePricing\V1\ObjectSerializer::sanitizeForSerialization($this));
    }
}


